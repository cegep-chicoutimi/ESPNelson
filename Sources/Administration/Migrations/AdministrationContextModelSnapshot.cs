// <auto-generated />
using System;
using Administration.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Administration.Migrations
{
    [DbContext(typeof(AdministrationContext))]
    partial class AdministrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Administration.Model.Abonnement", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Abonnement", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CapaciteMax")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateModification")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("TaxeFederal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("TaxeProvincial")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Configuration", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AbonnementId")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("TicketId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("AbonnementId")
                        .IsUnique();

                    b.HasIndex("TicketId")
                        .IsUnique();

                    b.ToTable("Paiement", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Rapport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DateGeneration")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Fichier")
                        .HasColumnType("longtext");

                    b.Property<int>("UtilisateurId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Rapport", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Tarification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("DureeMax")
                        .HasColumnType("int");

                    b.Property<int>("DureeMin")
                        .HasColumnType("int");

                    b.Property<string>("Niveau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Tarification", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Ticket", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("EstConverti")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EstPaye")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime>("TempsArrive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("TempsSortie")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("Ticket", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Utilisateur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(205)
                        .HasColumnType("varchar(205)");

                    b.Property<string>("MotDePasse")
                        .IsRequired()
                        .HasMaxLength(205)
                        .HasColumnType("varchar(205)");

                    b.Property<string>("NomUtilisateur")
                        .IsRequired()
                        .HasMaxLength(205)
                        .HasColumnType("varchar(205)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(205)
                        .HasColumnType("varchar(205)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Utilisateur", (string)null);
                });

            modelBuilder.Entity("Administration.Model.Abonnement", b =>
                {
                    b.HasOne("Administration.Model.Utilisateur", "Utilisateur")
                        .WithMany("Abonnements")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Administration.Model.Configuration", b =>
                {
                    b.HasOne("Administration.Model.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Administration.Model.Paiement", b =>
                {
                    b.HasOne("Administration.Model.Abonnement", "Abonnement")
                        .WithOne()
                        .HasForeignKey("Administration.Model.Paiement", "AbonnementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Administration.Model.Ticket", "Ticket")
                        .WithOne()
                        .HasForeignKey("Administration.Model.Paiement", "TicketId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Abonnement");

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("Administration.Model.Rapport", b =>
                {
                    b.HasOne("Administration.Model.Utilisateur", "Utilisateur")
                        .WithMany()
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Administration.Model.Utilisateur", b =>
                {
                    b.Navigation("Abonnements");
                });
#pragma warning restore 612, 618
        }
    }
}
